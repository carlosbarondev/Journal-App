{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","loading","msgError","notes","active","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","googleAuthProvider","GoogleAuthProvider","setError","err","finishLoading","loadNotes","a","getDocs","collection","notesSnap","forEach","snapHijo","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","updateDoc","doc","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","getAuth","signInWithEmailAndPassword","then","user","login","catch","e","console","log","message","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","LoginScreen","useDispatch","useSelector","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","userCredential","updateProfile","error","errorCode","code","errorMessage","startRegisterWithEmailPasswordName","AuthRouter","path","element","replace","PrivateRoute","children","isAuthenticated","PublicRoute","JournalEntry","date","noteDay","moment","style","backgroundSize","backgroundImage","format","JournalEntries","Sidebar","signOut","newNote","Date","getTime","addDoc","NotesAppBar","display","files","text","showConfirmButton","allowOutsideClick","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","deleteDoc","startDeleting","NothingSelected","JournalScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"4LAAaA,EAEF,eAFEA,EAGD,gBAHCA,EAKG,iBALHA,EAMM,oBANNA,EAQO,qBARPA,EASQ,sBATRA,EAWI,mBAXJA,EAYI,0BAZJA,EAaE,qBAbFA,EAcK,uBAdLA,EAgBI,sBAhBJA,EAiBY,0B,QCfnBC,EAAe,CACjBC,SAAS,EACTC,SAAU,M,QCaRF,EAAe,CACjBG,MAAO,GACPC,OAAQ,MCZNC,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAErGC,EAAWC,YAAgB,CAC7BC,KCDuB,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAE/C,OAAQA,EAAOC,MAEX,KAAKf,EACD,MAAO,CACHgB,IAAKF,EAAOG,QAAQD,IACpBE,KAAMJ,EAAOG,QAAQE,aAG7B,KAAKnB,EACD,MAAO,GAEX,QACI,OAAOa,IDZfO,GFJqB,WAAmC,IAAlCP,EAAiC,uDAAzBZ,EAAca,EAAW,uCAEvD,OAAQA,EAAOC,MAEX,KAAKf,EACD,OAAO,2BACAa,GADP,IAEIV,SAAUW,EAAOG,UAGzB,KAAKjB,EACD,OAAO,2BACAa,GADP,IAEIV,SAAU,OAGlB,KAAKH,EACD,OAAO,2BACAa,GADP,IAEIX,SAAS,IAGjB,KAAKF,EACD,OAAO,2BACAa,GADP,IAEIX,SAAS,IAGjB,QACI,OAAOW,IExBfT,MDUwB,WAAmC,IAAlCS,EAAiC,uDAAzBZ,EAAca,EAAW,uCAE1D,OAAQA,EAAOC,MAEX,KAAKf,EACD,OAAO,2BACAa,GADP,IAEIR,OAAO,eACAS,EAAOG,WAItB,KAAKjB,EACD,OAAO,2BACAa,GADP,IAEIT,MAAM,CAAEU,EAAOG,SAAV,mBAAsBJ,EAAMT,UAGzC,KAAKJ,EACD,OAAO,2BACAa,GADP,IAEIT,MAAM,YAAKU,EAAOG,WAG1B,KAAKjB,EACD,OAAO,2BACAa,GADP,IAEIT,MAAOS,EAAMT,MAAMiB,KACf,SAAAC,GAAI,OAAIA,EAAKC,KAAOT,EAAOG,QAAQM,GAC7BT,EAAOG,QAAQK,KACfA,OAIlB,KAAKtB,EACD,OAAO,2BACAa,GADP,IAEIR,OAAQ,KACRD,MAAOS,EAAMT,MAAMoB,QAAO,SAAAF,GAAI,OAAIA,EAAKC,KAAOT,EAAOG,aAG7D,KAAKjB,EACD,OAAO,2BACAa,GADP,IAEIR,OAAQ,KACRD,MAAO,KAGf,QACI,OAAOS,MCxDNY,EAAQC,YACjBhB,EACAJ,EACIqB,YAAgBC,O,uGEGxBC,YAVuB,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAMX,IAAMC,EAAKC,cACLC,EAAqB,IAAIC,ICtBlBC,EAAW,SAACC,GACrB,MAAO,CACH1B,KAAMf,EACNiB,QAASwB,IAgBJC,EAAgB,WACzB,MAAO,CACH3B,KAAMf,ICpBD2C,EAAS,uCAAG,WAAO3B,GAAP,iBAAA4B,EAAA,sEAEGC,YAAQC,YAAWV,EAAD,UAAQpB,EAAR,oBAFrB,cAEf+B,EAFe,OAGf3C,EAAQ,GAEd2C,EAAUC,SAAQ,SAACC,GACf7C,EAAM8C,KAAN,aACI3B,GAAI0B,EAAS1B,IACV0B,EAASE,YARC,kBAYd/C,GAZc,2CAAH,sDCHTgD,EAAU,uCAAG,WAAOC,GAAP,mBAAAT,EAAA,4DAEL,oDAEXU,EAAW,IAAIC,UACZC,OAAO,gBAAiB,eACjCF,EAASE,OAAO,OAAQH,GANF,kBASCI,MAPN,mDAOsB,CAC/BC,OAAQ,OACRC,KAAML,IAXQ,YASZM,EATY,QAcTC,GAdS,kCAeUD,EAAKE,OAff,eAeRC,EAfQ,yBAgBPA,EAAUC,YAhBH,yBAkBFJ,EAAKE,OAlBH,oJAAH,sDC6BVG,EAAa,SAAC1C,EAAID,GAC3B,MAAO,CACHP,KAAMf,EACNiB,QAAQ,aACJM,MACGD,KAKF4C,EAAa,SAAC3C,EAAID,GAC3B,MAAO,CACHP,KAAMf,EACNiB,QAAQ,aACJM,MACGD,KAKF6C,EAAoB,SAACnD,GAC9B,8CAAO,WAAOoD,GAAP,eAAAxB,EAAA,sEACiBD,EAAU3B,GAD3B,OACGZ,EADH,OAEHgE,EAASC,EAASjE,IAFf,2CAAP,uDAMSiE,EAAW,SAACjE,GACrB,MAAO,CACHW,KAAMf,EACNiB,QAASb,IAIJkE,EAAgB,SAAChD,GAE1B,8CAAO,WAAO8C,EAAUG,GAAjB,iBAAA3B,EAAA,6DAEK5B,EAAQuD,IAAW3D,KAAnBI,IAEHM,EAAKkD,YACClD,EAAKkD,WAGVC,EARH,eAQ0BnD,IACNC,GATpB,SAWGmD,YAAUC,YAAIvC,EAAD,UAAQpB,EAAR,0BAA6BM,EAAKC,KAAOkD,GAXzD,OAaHL,EAASQ,EAAYtD,EAAKC,GAAIkD,IAC9BI,IAAKC,KAAK,QAASxD,EAAKyD,MAAO,WAd5B,2CAAP,yDAkBSH,EAAc,SAACrD,EAAID,GAC5B,MAAO,CACHP,KAAMf,EACNiB,QAAS,CACLM,KACAD,KAAK,aACDC,MACGD,MA8CN0D,EAAa,SAACzD,GACvB,MAAO,CACHR,KAAMf,EACNiB,QAASM,ICnIJ0D,EAA0B,SAACC,EAAOC,GAC3C,OAAO,SAACf,GACJA,EJMG,CACHrD,KAAMf,IINN,IAAMY,EAAOwE,cACbC,YAA2BzE,EAAMsE,EAAOC,GACnCG,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLnB,EAASoB,GAAMD,EAAKvE,IAAKuE,EAAKpE,cAC9BiD,EAAS1B,QAEZ+C,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZtB,EAAS1B,KACTmC,IAAKC,KAAK,QAASY,EAAEG,QAAS,cAmCjCL,GAAQ,SAACxE,EAAKG,GACvB,MAAO,CACHJ,KAAMf,EACNiB,QAAS,CACLD,MACAG,iBAcC2E,GAAS,WAClB,MAAO,CACH/E,KAAMf,I,QC1ED+F,GAAU,WAAwB,IAAvB9F,EAAsB,uDAAP,GAEnC,EAA4B+F,mBAAS/F,GAArC,mBAAOgG,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WAAkC,IAAjCC,EAAgC,uDAAjBnG,EAC1BiG,EAAUE,IAGRC,EAAoB,SAACX,GACvBQ,EAAU,2BACHD,GADE,mBAEJP,EAAEY,OAAOpF,KAAOwE,EAAEY,OAAOC,UAIlC,MAAO,CAACN,EAAQI,EAAmBF,I,QCZ1BK,GAAc,WAEvB,IAAMpC,EAAWqC,cACTvG,EAAYwG,aAAY,SAAA7F,GAAK,OAAIA,EAAMO,MAAvClB,QAER,EAAwC6F,GAAQ,CAC5Cb,MAAO,kBACPC,SAAU,WAFd,mBAAOwB,EAAP,KAAmBN,EAAnB,KAKQnB,EAAoByB,EAApBzB,MAAOC,EAAawB,EAAbxB,SAWf,OACI,uCAEI,qBAAIyB,UAAU,cAAd,mBAEA,wBACIC,SAfQ,SAACnB,GACjBA,EAAEoB,iBACF1C,EAASa,EAAwBC,EAAOC,KAchCyB,UAAU,oDAFd,UAKI,wBACI7F,KAAK,OACLgG,YAAY,QACZ7F,KAAK,QACL0F,UAAU,cACVI,aAAa,MACbT,MAAOrB,EACP+B,SAAUZ,IAGd,wBACItF,KAAK,WACLgG,YAAY,WACZ7F,KAAK,WACL0F,UAAU,cACVL,MAAOpB,EACP8B,SAAUZ,IAGd,yBACItF,KAAK,SACL6F,UAAU,4BACVM,SAAUhH,EAHd,mBAQA,uBAAK0G,UAAU,wBAAf,UAEI,4DAEA,uBACIA,UAAU,aACVO,QA/CM,WACtB/C,GFuBG,SAACA,GACJ,IAAMxD,EAAOwE,cACbgC,YAAgBxG,EAAM0B,GACjBgD,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLnB,EAASoB,GAAMD,EAAKvE,IAAKuE,EAAKpE,qBEiB1B,UAII,sBAAKyF,UAAU,sBAAf,SACI,sBAAKA,UAAU,cAAcS,IAAI,8EAA8EC,IAAI,oBAEvH,oBAAGV,UAAU,WAAb,SACI,6DAOZ,eAAC,IAAD,CACIW,GAAG,iBACHX,UAAU,OAFd,uC,oBCzEHY,GAAiB,WAE1B,IAAMpD,EAAWqC,cACTtG,EAAauG,aAAY,SAAA7F,GAAK,OAAIA,EAAMO,MAAxCjB,SAER,EAAwC4F,GAAQ,CAC5C7E,KAAM,SACNgE,MAAO,kBACPC,SAAU,SACVsC,UAAW,WAJf,mBAAOd,EAAP,KAAmBN,EAAnB,KAOQnF,EAAqCyF,EAArCzF,KAAMgE,EAA+ByB,EAA/BzB,MAAOC,EAAwBwB,EAAxBxB,SAAUsC,EAAcd,EAAdc,UAYzBC,EAAc,WAEhB,OAA2B,IAAvBxG,EAAKyG,OAAOC,QACZxD,EAAS5B,EAAS,sBACX,GACCqF,KAAUC,QAAQ5C,GAGnBC,IAAasC,GAAatC,EAASyC,OAAS,GACnDxD,EAAS5B,EAAS,mEACX,IAGX4B,EPpCG,CACHrD,KAAMf,KOoCC,IARHoE,EAAS5B,EAAS,wBACX,IAWf,OACI,uCAEI,qBAAIoE,UAAU,cAAd,sBAEA,wBACIC,SAlCW,SAACnB,GAEpBA,EAAEoB,iBAEEY,KACAtD,EHHsC,SAACc,EAAOC,EAAUjE,GAChE,OAAO,SAACkD,GACJ,IAAMxD,EAAOwE,cACb2C,YAA+BnH,EAAMsE,EAAOC,GACvCG,KADL,uCACU,WAAO0C,GAAP,eAAApF,EAAA,6DACI2C,EAAOyC,EAAezC,KAD1B,SAEI0C,YAAc1C,EAAM,CAAEpE,YAAaD,IAFvC,OAGFyE,QAAQC,IAAIL,GAEZnB,EAASoB,GAAMD,EAAKvE,IAAKuE,EAAKpE,cAL5B,2CADV,uDAQKsE,OAAM,SAACyC,GACJ,IAAMC,EAAYD,EAAME,KAClBC,EAAeH,EAAMrC,QAC3BF,QAAQC,IAAIuC,EAAWE,GACvBxD,IAAKC,KAAK,QAASqD,EAAY,IAAME,EAAc,aGZ9CC,CAAmCpD,EAAOC,EAAUjE,KA8BzD0F,UAAU,oDAFd,UAMQzG,GACC,sBAAKyG,UAAU,oBAAf,SACIzG,IAIT,wBACIY,KAAK,OACLgG,YAAY,OACZ7F,KAAK,OACL0F,UAAU,cACVI,aAAa,MACbT,MAAOrF,EACP+F,SAAUZ,IAGd,wBACItF,KAAK,OACLgG,YAAY,QACZ7F,KAAK,QACL0F,UAAU,cACVI,aAAa,MACbT,MAAOrB,EACP+B,SAAUZ,IAGd,wBACItF,KAAK,WACLgG,YAAY,WACZ7F,KAAK,WACL0F,UAAU,cACVL,MAAOpB,EACP8B,SAAUZ,IAGd,wBACItF,KAAK,WACLgG,YAAY,mBACZ7F,KAAK,YACL0F,UAAU,cACVL,MAAOkB,EACPR,SAAUZ,IAGd,yBACItF,KAAK,SACL6F,UAAU,iCAFd,sBAOA,eAAC,IAAD,CACIW,GAAG,cACHX,UAAU,OAFd,wCC3GH2B,GAAa,WACtB,OACI,sBAAK3B,UAAU,aAAf,SACI,sBAAKA,UAAU,sBAAf,SACI,gBAAC,IAAD,WACI,eAAC,IAAD,CAAO4B,KAAK,QAAQC,QAAS,eAAC,GAAD,MAC7B,eAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,eAAC,GAAD,MAEhC,eAAC,IAAD,CAAOD,KAAK,KAAKC,QAAS,eAAC,IAAD,CAAUC,SAAO,EAACnB,GAAG,oBCZtDoB,GAAe,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAE3B,OAF2D,EAAtBC,gBAG/BD,EACA,eAAC,IAAD,CAAUrB,GAAG,iBCJVuB,GAAc,SAAC,GAAmC,IAAjCF,EAAgC,EAAhCA,SAE1B,OAF0D,EAAtBC,gBAG9B,eAAC,IAAD,CAAUtB,GAAG,MACbqB,G,oBCAGG,GAAe,SAAC,GAAoC,IAAlCxH,EAAiC,EAAjCA,GAAIyH,EAA6B,EAA7BA,KAAMjE,EAAuB,EAAvBA,MAAOpB,EAAgB,EAAhBA,KAAMa,EAAU,EAAVA,IAE5CyE,EAAUC,KAAOF,GACjB5E,EAAWqC,cAUjB,OAEI,uBACIG,UAAU,2EACVO,QAZiB,WACrB/C,EACIH,EAAW1C,EAAI,CACXyH,OAAMjE,QAAOpB,OAAMa,UAO3B,UAMQA,GACA,sBACIoC,UAAU,yBACVuC,MAAO,CACHC,eAAgB,QAChBC,gBAAgB,OAAD,OAAS7E,EAAT,QAK3B,uBAAKoC,UAAU,sBAAf,UAEI,oBAAGA,UAAU,uBAAb,SACK7B,IAGL,oBAAG6B,UAAU,yBAAb,SACKjD,OAKT,uBAAKiD,UAAU,0BAAf,UACI,gCAAOqC,EAAQK,OAAO,UACtB,8BAAKL,EAAQK,OAAO,eChDvBC,GAAiB,WAE1B,IAAQnJ,EAAUsG,aAAY,SAAA7F,GAAK,OAAIA,EAAMT,SAArCA,MAER,OACI,sBAAKwG,UAAU,mBAAf,SAEQxG,EAAMiB,KAAI,SAAAC,GAAI,OACV,eAAC,GAAD,eAEQA,GADCA,EAAKC,UCPrBiI,GAAU,WAEnB,IAAMpF,EAAWqC,cACTvF,EAASwF,aAAY,SAAA7F,GAAK,OAAIA,EAAMD,QAApCM,KAUR,OAEI,yBAAO0F,UAAU,mBAAjB,UAEI,uBAAKA,UAAU,0BAAf,UAEI,sBAAIA,UAAU,OAAd,UAEI,oBAAGA,UAAU,gBAEb,sCAAQ1F,QAIZ,yBACI0F,UAAU,MACVO,QAxBK,WACjB/C,ETuDJ,uCAAO,WAAOA,GAAP,eAAAxB,EAAA,6DACGhC,EAAOwE,cADV,SAEGqE,YAAQ7I,GAFX,OAGHwD,EAAS0B,MACT1B,ED0EG,CACHrD,KAAMf,IC/EH,2CAAP,wDSlCY,uBASJ,uBACI4G,UAAU,qBACVO,QA7BS,WACjB/C,EVJJ,uCAAO,WAAOA,EAAUG,GAAjB,mBAAA3B,EAAA,6DAEK5B,EAAQuD,IAAW3D,KAAnBI,IAEF0I,EAAU,CACZ3E,MAAO,GACPpB,KAAM,GACNqF,MAAM,IAAIW,MAAOC,WAPlB,SAUeC,YAAO/G,YAAWV,EAAD,UAAQpB,EAAR,mBAA8B0I,GAV9D,OAUG/E,EAVH,OAYHP,EAASH,EAAWU,EAAIpD,GAAImI,IAC5BtF,EAASF,EAAWS,EAAIpD,GAAImI,IAbzB,2CAAP,0DU8BQ,UAII,oBAAG9C,UAAU,+BACb,oBAAGA,UAAU,OAAb,0BAKJ,eAAC,GAAD,QChDCkD,GAAc,WAEvB,IAAM1F,EAAWqC,cACTpG,EAAWqG,aAAY,SAAA7F,GAAK,OAAIA,EAAMT,SAAtCC,OAiBR,OAEI,uBAAKuG,UAAU,gBAAf,UAEI,sDAEA,wBACIrF,GAAG,eACHR,KAAK,OACLG,KAAK,OACLiI,MAAO,CAAEY,QAAS,QAClB9C,SAlBa,SAACvB,GACtB,IAAMrC,EAAOqC,EAAEY,OAAO0D,MAAM,GACxB3G,GACAe,EX6EkB,SAACf,GAE3B,8CAAO,WAAOe,EAAUG,GAAjB,iBAAA3B,EAAA,6DAEaqB,EAAeM,IAAWnE,MAAlCC,OAERwE,IAAKC,KAAK,CACNC,MAAO,eACPkF,KAAM,iBACNC,mBAAmB,EACnBC,mBAAmB,EACnBC,SAAU,WACNvF,IAAKwF,iBAVV,SAcmBjH,EAAWC,GAd9B,OAcGiH,EAdH,OAeHrG,EAAWO,IAAM8F,EAEjBlG,EAASE,EAAcL,IAEvBY,IAAK0F,QAnBF,2CAAP,wDW/EiBC,CAAenH,OAkBxB,iCAEI,yBACIuD,UAAU,MACVO,QA7BW,WACvBsD,SAASC,cAAc,iBAAiBC,SA0BhC,qBAOA,yBACI/D,UAAU,MACVO,QAxCG,WACf/C,EAASE,EAAcjE,KAqCf,yBCtCHuK,GAAa,WAEtB,IAAMxG,EAAWqC,cAEDnF,EAASoF,aAAY,SAAA7F,GAAK,OAAIA,EAAMT,SAA5CC,OACR,EAA+C0F,GAAQzE,GAAvD,mBAAOqF,EAAP,KAAmBN,EAAnB,KAAsCF,EAAtC,KACQxC,EAAoBgD,EAApBhD,KAAMoB,EAAc4B,EAAd5B,MAAOxD,EAAOoF,EAAPpF,GAEfsJ,EAAWC,iBAAOxJ,EAAKC,IAE7BwJ,qBAAU,WACFzJ,EAAKC,KAAOsJ,EAASG,UACrB7E,EAAM7E,GACNuJ,EAASG,QAAU1J,EAAKC,MAE7B,CAACD,EAAM6E,IAGV4E,qBAAU,WACN3G,EAASH,EAAW0C,EAAWpF,GAAZ,eAAqBoF,OACzC,CAACA,EAAYvC,IAMhB,OAEI,uBAAKwC,UAAU,sBAAf,UAEI,eAAC,GAAD,IAEA,uBAAKA,UAAU,iBAAf,UAEI,wBACI7F,KAAK,OACLgG,YAAY,qBACZH,UAAU,qBACVI,aAAa,MACb9F,KAAK,QACLqF,MAAOxB,EACPkC,SAAUZ,IAGd,2BACIU,YAAY,sBACZH,UAAU,kBACV1F,KAAK,OACLqF,MAAO5C,EACPsD,SAAUZ,IAIT/E,EAAKkD,KAEF,sBAAKoC,UAAU,eAAf,SACI,sBACIS,IAAK/F,EAAKkD,IACV8C,IAAI,gBAQxB,yBACIV,UAAU,iBACVO,QA9CS,WACjB/C,EZ4FqB,SAAC7C,GAE1B,8CAAO,WAAO6C,EAAUG,GAAjB,eAAA3B,EAAA,6DAEG5B,EAAMuD,IAAW3D,KAAKI,IAFzB,SAIGiK,YAAUtG,YAAIvC,EAAD,UAAQpB,EAAR,0BAA6BO,KAJ7C,OAMH6C,EAASY,EAAWzD,IANjB,2CAAP,wDY9Fa2J,CAAc3J,KA2CnB,wBC1EC4J,GAAkB,WAC3B,OACI,uBAAKvE,UAAU,wBAAf,UACI,kDAEI,wBAFJ,yBAKA,oBAAGA,UAAU,+BCFZwE,GAAgB,WAEzB,IAAQ/K,EAAWqG,aAAY,SAAA7F,GAAK,OAAIA,EAAMT,SAAtCC,OAER,OAEI,uBAAKuG,UAAU,0EAAf,UAEI,eAAC,GAAD,IAEA,gCAGSvG,EACM,eAAC,GAAD,IACD,eAAC,GAAD,UCNbgL,GAAY,WAErB,IAAMjH,EAAWqC,cAEjB,EAAgCT,oBAAS,GAAzC,mBAAOsF,EAAP,KAAiBC,EAAjB,KACA,EAAoCvF,oBAAS,GAA7C,mBAAOwF,EAAP,KAAmBC,EAAnB,KA4BA,OA1BAV,qBAAU,WAEN,IAAMnK,EAAOwE,cAEbsG,YAAmB9K,EAAD,uCAAO,WAAO2E,GAAP,SAAA3C,EAAA,uDAErB,OAAI2C,QAAJ,IAAIA,OAAJ,EAAIA,EAAMvE,MAENoD,EAASoB,GAAMD,EAAKvE,IAAKuE,EAAKpE,cAE9BsK,GAAc,GAEdrH,EAASD,EAAkBoB,EAAKvE,OAIhCyK,GAAc,GAIlBF,GAAY,GAhBS,2CAAP,yDAoBnB,CAACnH,EAAUmH,EAAaE,IAEvBH,EAEI,0CAMJ,eAAC,IAAD,UAEI,gBAAC,IAAD,WAEI,eAAC,IAAD,CACI9C,KAAK,IACLC,QAEI,eAAC,GAAD,CAAcI,gBAAiB2C,EAA/B,SACI,eAAC,GAAD,QAKZ,eAAC,IAAD,CACIhD,KAAK,KACLC,QAEI,eAAC,IAAD,CAAUC,SAAO,EAACnB,GAAG,iBAI7B,eAAC,IAAD,CACIiB,KAAK,SACLC,QAEI,eAAC,GAAD,CAAaI,gBAAiB2C,EAA9B,SACI,eAAC,GAAD,cC7EfG,GAAa,WACtB,OACI,eAAC,IAAD,CAAUlK,MAAOA,EAAjB,SACI,eAAC,GAAD,O,OCFZmK,IAASC,OAAO,eAAC,GAAD,IAAgBpB,SAASqB,eAAe,W","file":"static/js/main.53ead60a.chunk.js","sourcesContent":["export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n/*\r\n    {\r\n        notes: [],\r\n        active: null or\r\n        active: {\r\n            id: 'adsdasasgew',\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 234325521\r\n        }\r\n    }\r\n*/\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose; // Redux DevTools\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk) // Middleware para acciones asincronas\r\n    ) // Redux DevTools\r\n);","import { types } from \"../types/types\";\r\n\r\n/*\r\n    {\r\n        uid: 'adfdfs343463',\r\n        name: 'Carlos'\r\n    }\r\n*/\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}","import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAgro7VcneUvb4_7gX339rvw89tEiku7ys\",\r\n    authDomain: \"journal-app-1d2fa.firebaseapp.com\",\r\n    projectId: \"journal-app-1d2fa\",\r\n    storageBucket: \"journal-app-1d2fa.appspot.com\",\r\n    messagingSenderId: \"398668733607\",\r\n    appId: \"1:398668733607:web:cea71ebfdd37dc12914f82\"\r\n};\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore();\r\nconst googleAuthProvider = new GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const setError = (err) => {\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n    return {\r\n        type: types.uiRemoveError\r\n    }\r\n}\r\n\r\nexport const startLoading = () => {\r\n    return {\r\n        type: types.uiStartLoading\r\n    }\r\n}\r\n\r\nexport const finishLoading = () => {\r\n    return {\r\n        type: types.uiFinishLoading\r\n    }\r\n}","import { db } from \"../firebase/firebase-config\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const notesSnap = await getDocs(collection(db, `${uid}/journal/notes`));\r\n    const notes = [];\r\n\r\n    notesSnap.forEach((snapHijo) => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n\r\n}","export const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/doj1bpd1j/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'journal-app');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import { collection, addDoc, updateDoc, doc, deleteDoc } from \"firebase/firestore\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { db } from '../firebase/firebase-config';\r\nimport { types } from '../types/types';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n\r\nexport const startNewNote = () => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await addDoc(collection(db, `${uid}/journal/notes`), newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => {\r\n    return {\r\n        type: types.notesActive,\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n}\r\n\r\nexport const addNewNote = (id, note) => {\r\n    return {\r\n        type: types.notesAddNew,\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => { // redux-thunk\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => {\r\n    return {\r\n        type: types.notesLoad,\r\n        payload: notes\r\n    }\r\n}\r\n\r\nexport const startSaveNote = (note) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await updateDoc(doc(db, `${uid}/journal/notes/${note.id}`), noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => {\r\n    return {\r\n        type: types.notesUpdated,\r\n        payload: {\r\n            id,\r\n            note: {\r\n                id,\r\n                ...note\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const startUploading = (file) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            showConfirmButton: false,\r\n            allowOutsideClick: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n\r\n        Swal.close();\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        await deleteDoc(doc(db, `${uid}/journal/notes/${id}`));\r\n\r\n        dispatch(deleteNote(id));\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => {\r\n    return {\r\n        type: types.notesDelete,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const noteLogout = () => {\r\n    return {\r\n        type: types.notesLogoutCleaning\r\n    }\r\n}","import Swal from 'sweetalert2';\r\n\r\nimport { getAuth, signInWithPopup, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from '../types/types';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => { // dispatch lo llama el middleware thunk para tareas asincronas\r\n        dispatch(startLoading());\r\n        const auth = getAuth();\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => { // dispatch lo llama el middleware thunk para tareas asincronas\r\n        const auth = getAuth();\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(async (userCredential) => {\r\n                const user = userCredential.user;\r\n                await updateProfile(user, { displayName: name });\r\n                console.log(user);\r\n\r\n                dispatch(login(user.uid, user.displayName));\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                console.log(errorCode, errorMessage);\r\n                Swal.fire('Error', errorCode + ' ' + errorMessage, 'error');\r\n            });\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        const auth = getAuth();\r\n        signInWithPopup(auth, googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n};\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        const auth = getAuth();\r\n        await signOut(auth);\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: types.logout\r\n    }\r\n}","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(newFormState);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'carlos@test.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form\r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport validator from 'validator';\r\n\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { removeError, setError } from \"../../actions/ui\";\r\nimport { startRegisterWithEmailPasswordName } from \"../../actions/auth\";\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'carlos',\r\n        email: 'carlos@test.com',\r\n        password: '123456',\r\n        password2: '123456',\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n        return true;\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form\r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {\r\n                    msgError &&\r\n                    (<div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>)\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Routes, Route, Navigate } from \"react-router-dom\";\r\n\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Routes>\r\n                    <Route path=\"login\" element={<LoginScreen />} />\r\n                    <Route path=\"register\" element={<RegisterScreen />} />\r\n\r\n                    <Route path=\"/*\" element={<Navigate replace to=\"login\" />} />\r\n\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Navigate } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({ children, isAuthenticated }) => {\r\n\r\n    return isAuthenticated\r\n        ? children\r\n        : <Navigate to=\"/auth/login\" />\r\n\r\n}","import { Navigate } from \"react-router-dom\";\r\n\r\nexport const PublicRoute = ({ children, isAuthenticated }) => {\r\n\r\n    return isAuthenticated\r\n        ? <Navigate to=\"/\" />\r\n        : children\r\n\r\n}","import moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { activeNote } from '../../actions/notes';\r\n\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDay = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(\r\n            activeNote(id, {\r\n                date, title, body, url\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div\r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={handleEntryClick}\r\n        >\r\n\r\n            {\r\n                url &&\r\n                <div\r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDay.format('dddd')}</span>\r\n                <h4>{noteDay.format('Do')}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { JournalEntry } from \"./JournalEntry\";\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry\r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport { JournalEntries } from \"./JournalEntries\";\r\nimport { startNewNote } from \"../../actions/notes\";\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n\r\n        <aside className=\"journal__sidebar\">\r\n\r\n            <div className=\"journal__sidebar-navbar\">\r\n\r\n                <h3 className=\"mt-5\">\r\n\r\n                    <i className=\"far fa-moon\" />\r\n\r\n                    <span> {name}</span>\r\n\r\n                </h3>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div\r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { startSaveNote, startUploading } from \"../../actions/notes\";\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"notes__appbar\">\r\n\r\n            <span>28 de agosto 2020</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { activeNote, startDeleting } from \"../../actions/notes\";\r\nimport { NotesAppBar } from \"./NotesAppBar\";\r\n\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector(state => state.notes);\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, { ...formValues }));\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    (\r\n                        <div className=\"notes__image\">\r\n                            <img\r\n                                src={note.url}\r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","export const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport { Sidebar } from \"./Sidebar\";\r\nimport { NoteScreen } from \"../notes/NoteScreen\";\r\nimport { NothingSelected } from \"./NothingSelected\";\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    return (\r\n\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n\r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen />)\r\n                        : <NothingSelected />\r\n                }\r\n\r\n            </main>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { getAuth, onAuthStateChanged } from \"@firebase/auth\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\n\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { login } from \"../actions/auth\";\r\nimport { startLoadingNotes } from \"../actions/notes\";\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const auth = getAuth();\r\n\r\n        onAuthStateChanged(auth, async (user) => {\r\n\r\n            if (user?.uid) {\r\n\r\n                dispatch(login(user.uid, user.displayName));\r\n\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n\r\n            } else {\r\n\r\n                setIsLoggedIn(false);\r\n\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        });\r\n\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if (checking) {\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <BrowserRouter>\r\n\r\n            <Routes>\r\n\r\n                <Route\r\n                    path=\"/\"\r\n                    element=\r\n                    {\r\n                        <PrivateRoute isAuthenticated={isLoggedIn} >\r\n                            <JournalScreen />\r\n                        </PrivateRoute>\r\n                    }\r\n                />\r\n\r\n                <Route\r\n                    path=\"/*\"\r\n                    element=\r\n                    {\r\n                        <Navigate replace to=\"auth/login\" />\r\n                    }\r\n                />\r\n\r\n                <Route\r\n                    path=\"auth/*\"\r\n                    element=\r\n                    {\r\n                        <PublicRoute isAuthenticated={isLoggedIn} >\r\n                            <AuthRouter />\r\n                        </PublicRoute>\r\n                    }\r\n                />\r\n\r\n            </Routes>\r\n\r\n        </BrowserRouter>\r\n\r\n    )\r\n}\r\n","import { Provider } from \"react-redux\";\r\n\r\nimport { store } from \"./store/store\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\n\nReactDOM.render(<JournalApp />, document.getElementById('root'));\n"],"sourceRoot":""}